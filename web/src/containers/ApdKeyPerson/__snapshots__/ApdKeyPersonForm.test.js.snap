// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the ApdKeyPersonForm component renders correctly 1`] = `
<PersonForm
  index={1}
  item={
    Object {
      "costs": Object {
        "1992": 100,
        "1993": 300,
      },
      "email": "email address",
      "fte": Object {
        "1992": 0.32,
        "1993": 0.57,
      },
      "hasCosts": true,
      "key": "person key",
      "name": "Bob the Builder",
      "position": "The Builder",
    }
  }
  savePerson={[MockFunction]}
  years={
    Array [
      "1992",
      "1993",
    ]
  }
>
  <form
    index={1}
    onSubmit={[Function]}
  >
    <h4
      className="ds-h4"
    >
      Additional Key Personnel
    </h4>
    <p
      className="ds-u-margin-bottom--0"
    >
      Provide the name, email, and role for this key personnel. If applicable, provide the individual's total annual cost (including benefits) and their allocation to the overall project work.
    </p>
    <TextField
      label="Name"
      name="apd-state-profile-pocname1"
      onChange={[Function]}
      type="text"
      value="Bob the Builder"
    >
      <FormControl
        className="ds-u-clearfix"
        component="div"
        label="Name"
        labelComponent="label"
        render={[Function]}
      >
        <div
          className="ds-u-clearfix"
        >
          <FormLabel
            component="label"
            errorId="field_1-error"
            fieldId="field_1"
            id="field_1-label"
          >
            <label
              className="ds-c-label"
              htmlFor="field_1"
              id="field_1-label"
            >
              <span
                className=""
              >
                Name
              </span>
            </label>
          </FormLabel>
          <TextInput
            errorId="field_1-error"
            errorPlacement="top"
            id="field_1"
            name="apd-state-profile-pocname1"
            onChange={[Function]}
            setRef={[Function]}
            type="text"
            value="Bob the Builder"
          >
            <input
              aria-invalid={false}
              className="ds-c-field"
              id="field_1"
              name="apd-state-profile-pocname1"
              onChange={[Function]}
              type="text"
              value="Bob the Builder"
            />
          </TextInput>
        </div>
      </FormControl>
    </TextField>
    <TextField
      label="Email"
      name="apd-state-profile-pocemail1"
      onChange={[Function]}
      type="text"
      value="email address"
    >
      <FormControl
        className="ds-u-clearfix"
        component="div"
        label="Email"
        labelComponent="label"
        render={[Function]}
      >
        <div
          className="ds-u-clearfix"
        >
          <FormLabel
            component="label"
            errorId="field_2-error"
            fieldId="field_2"
            id="field_2-label"
          >
            <label
              className="ds-c-label"
              htmlFor="field_2"
              id="field_2-label"
            >
              <span
                className=""
              >
                Email
              </span>
            </label>
          </FormLabel>
          <TextInput
            errorId="field_2-error"
            errorPlacement="top"
            id="field_2"
            name="apd-state-profile-pocemail1"
            onChange={[Function]}
            setRef={[Function]}
            type="text"
            value="email address"
          >
            <input
              aria-invalid={false}
              className="ds-c-field"
              id="field_2"
              name="apd-state-profile-pocemail1"
              onChange={[Function]}
              type="text"
              value="email address"
            />
          </TextInput>
        </div>
      </FormControl>
    </TextField>
    <TextField
      label="Role"
      name="apd-state-profile-pocposition1"
      onChange={[Function]}
      type="text"
      value="The Builder"
    >
      <FormControl
        className="ds-u-clearfix"
        component="div"
        label="Role"
        labelComponent="label"
        render={[Function]}
      >
        <div
          className="ds-u-clearfix"
        >
          <FormLabel
            component="label"
            errorId="field_3-error"
            fieldId="field_3"
            id="field_3-label"
          >
            <label
              className="ds-c-label"
              htmlFor="field_3"
              id="field_3-label"
            >
              <span
                className=""
              >
                Role
              </span>
            </label>
          </FormLabel>
          <TextInput
            errorId="field_3-error"
            errorPlacement="top"
            id="field_3"
            name="apd-state-profile-pocposition1"
            onChange={[Function]}
            setRef={[Function]}
            type="text"
            value="The Builder"
          >
            <input
              aria-invalid={false}
              className="ds-c-field"
              id="field_3"
              name="apd-state-profile-pocposition1"
              onChange={[Function]}
              type="text"
              value="The Builder"
            />
          </TextInput>
        </div>
      </FormControl>
    </TextField>
    <ChoiceList
      choices={
        Array [
          Object {
            "checked": false,
            "checkedChildren": <PersonCostForm
              costLabel="Cost with benefits"
              fteLabel="FTE Allocation"
              hint="For example: 0.5 = 0.5 FTE = 50% time"
              items={
                Object {
                  "1992": Object {
                    "amt": 100,
                    "perc": 0.32,
                  },
                  "1993": Object {
                    "amt": 300,
                    "perc": 0.57,
                  },
                }
              }
              setCost={[Function]}
              setFTE={[Function]}
            />,
            "label": "Yes",
            "value": "yes",
          },
          Object {
            "checked": false,
            "label": "No",
            "value": "no",
          },
        ]
      }
      label="Does this person have costs directly attributable to this program?"
      name="apd-state-profile-hascosts1"
      onChange={[Function]}
      type="radio"
    >
      <FormControl
        component="fieldset"
        label="Does this person have costs directly attributable to this program?"
        labelComponent="legend"
        render={[Function]}
      >
        <fieldset
          className="ds-c-fieldset"
        >
          <FormLabel
            component="legend"
            errorId="field_4-error"
            id="field_4-label"
          >
            <legend
              className="ds-c-label"
              id="field_4-label"
            >
              <span
                className=""
              >
                Does this person have costs directly attributable to this program?
              </span>
            </legend>
          </FormLabel>
          <Choice
            checked={false}
            checkedChildren={
              <PersonCostForm
                costLabel="Cost with benefits"
                fteLabel="FTE Allocation"
                hint="For example: 0.5 = 0.5 FTE = 50% time"
                items={
                  Object {
                    "1992": Object {
                      "amt": 100,
                      "perc": 0.32,
                    },
                    "1993": Object {
                      "amt": 300,
                      "perc": 0.57,
                    },
                  }
                }
                setCost={[Function]}
                setFTE={[Function]}
              />
            }
            inputClassName=""
            inputRef={[Function]}
            key="yes"
            label="Yes"
            name="apd-state-profile-hascosts1"
            onChange={[Function]}
            type="radio"
            value="yes"
          >
            <div
              aria-atomic="false"
              aria-live="polite"
              aria-relevant="additions text"
            >
              <input
                checked={false}
                className="ds-c-choice"
                id="radio_apd-state-profile-hascosts1_5"
                name="apd-state-profile-hascosts1"
                onChange={[Function]}
                type="radio"
                value="yes"
              />
              <FormLabel
                component="label"
                fieldId="radio_apd-state-profile-hascosts1_5"
              >
                <label
                  className="ds-c-label"
                  htmlFor="radio_apd-state-profile-hascosts1_5"
                >
                  <span
                    className=""
                  >
                    Yes
                  </span>
                </label>
              </FormLabel>
            </div>
          </Choice>
          <Choice
            checked={false}
            inputClassName=""
            inputRef={[Function]}
            key="no"
            label="No"
            name="apd-state-profile-hascosts1"
            onChange={[Function]}
            type="radio"
            value="no"
          >
            <div
              aria-atomic={null}
              aria-live={null}
              aria-relevant={null}
            >
              <input
                checked={false}
                className="ds-c-choice"
                id="radio_apd-state-profile-hascosts1_6"
                name="apd-state-profile-hascosts1"
                onChange={[Function]}
                type="radio"
                value="no"
              />
              <FormLabel
                component="label"
                fieldId="radio_apd-state-profile-hascosts1_6"
              >
                <label
                  className="ds-c-label"
                  htmlFor="radio_apd-state-profile-hascosts1_6"
                >
                  <span
                    className=""
                  >
                    No
                  </span>
                </label>
              </FormLabel>
            </div>
          </Choice>
        </fieldset>
      </FormControl>
    </ChoiceList>
    <input
      className="ds-u-visibility--hidden"
      hidden={true}
      type="submit"
    />
  </form>
</PersonForm>
`;

exports[`the ApdKeyPersonForm component renders correctly if the person does not have costs 1`] = `
<form
  index={1}
  onSubmit={[Function]}
>
  <h4
    className="ds-h4"
  >
    Additional Key Personnel
  </h4>
  <p
    className="ds-u-margin-bottom--0"
  >
    Provide the name, email, and role for this key personnel. If applicable, provide the individual's total annual cost (including benefits) and their allocation to the overall project work.
  </p>
  <TextField
    label="Name"
    name="apd-state-profile-pocname1"
    onChange={[Function]}
    type="text"
    value="Bob the Builder"
  />
  <TextField
    label="Email"
    name="apd-state-profile-pocemail1"
    onChange={[Function]}
    type="text"
    value="email address"
  />
  <TextField
    label="Role"
    name="apd-state-profile-pocposition1"
    onChange={[Function]}
    type="text"
    value="The Builder"
  />
  <ChoiceList
    choices={
      Array [
        Object {
          "checked": false,
          "checkedChildren": <PersonCostForm
            costLabel="Cost with benefits"
            fteLabel="FTE Allocation"
            hint="For example: 0.5 = 0.5 FTE = 50% time"
            items={
              Object {
                "1992": Object {
                  "amt": 100,
                  "perc": 0.32,
                },
                "1993": Object {
                  "amt": 300,
                  "perc": 0.57,
                },
              }
            }
            setCost={[Function]}
            setFTE={[Function]}
          />,
          "label": "Yes",
          "value": "yes",
        },
        Object {
          "checked": false,
          "label": "No",
          "value": "no",
        },
      ]
    }
    label="Does this person have costs directly attributable to this program?"
    name="apd-state-profile-hascosts1"
    onChange={[Function]}
    type="radio"
  />
  <input
    className="ds-u-visibility--hidden"
    hidden={true}
    type="submit"
  />
</form>
`;

exports[`the ApdKeyPersonForm component renders correctly if the person is a primary contact 1`] = `
<form
  index={0}
  onSubmit={[Function]}
>
  <h4
    className="ds-h4"
  >
    Primary APD Point of Contact
  </h4>
  <p
    className="ds-u-margin-bottom--0"
  >
    Personnel listed in this section must be assigned to APD by name, role, time commitment, and cost, where applicable.
  </p>
  <TextField
    label="Name"
    name="apd-state-profile-pocname0"
    onChange={[Function]}
    type="text"
    value="Bob the Builder"
  />
  <TextField
    label="Email"
    name="apd-state-profile-pocemail0"
    onChange={[Function]}
    type="text"
    value="email address"
  />
  <TextField
    label="Role"
    name="apd-state-profile-pocposition0"
    onChange={[Function]}
    type="text"
    value="The Builder"
  />
  <ChoiceList
    choices={
      Array [
        Object {
          "checked": false,
          "checkedChildren": <PersonCostForm
            costLabel="Cost with benefits"
            fteLabel="FTE Allocation"
            hint="For example: 0.5 = 0.5 FTE = 50% time"
            items={
              Object {
                "1992": Object {
                  "amt": 100,
                  "perc": 0.32,
                },
                "1993": Object {
                  "amt": 300,
                  "perc": 0.57,
                },
              }
            }
            setCost={[Function]}
            setFTE={[Function]}
          />,
          "label": "Yes",
          "value": "yes",
        },
        Object {
          "checked": false,
          "label": "No",
          "value": "no",
        },
      ]
    }
    label="Does this person have costs directly attributable to this program?"
    name="apd-state-profile-hascosts0"
    onChange={[Function]}
    type="radio"
  />
  <input
    className="ds-u-visibility--hidden"
    hidden={true}
    type="submit"
  />
</form>
`;
