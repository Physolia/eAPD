// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Routes component renders correctly 1`] = `
<Switch>
  <Connect(PrivateRoute)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    exact={true}
    key="/"
    path="/"
  />
  <Connect(PrivateRoute)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    exact={false}
    key="/apd/:apdId"
    path="/apd/:apdId"
  />
  <Connect(PrivateRoute)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    exact={true}
    key="/print/:apdId"
    path="/print/:apdId"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    isCard={true}
    key="/login"
    path="/login"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    key="/logout"
    path="/logout"
  />
  <Connect(PrivateRoute)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    key="/manage-account"
    path="/manage-account"
  />
  <Connect(PrivateRoute)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    key="/select-affiliation"
    path="/select-affiliation"
  />
  <Connect(PrivateRoute)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    key="/state-admin"
    path="/state-admin"
  />
  <Connect(AdminRoute)
    component={[Function]}
    key="/delegate-state-admin"
    path="/delegate-state-admin"
  />
  <Route
    component={[Function]}
    key="no-match"
  />
</Switch>
`;
