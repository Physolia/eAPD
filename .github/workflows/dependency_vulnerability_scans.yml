name: Dependency Vulnerability Scans
on:
  schedule:
    - cron: '30 0 * * *' # every day at 12:30 am

jobs:
  install-dependencies:
    environment: Preview
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        node-version: ['16']
    steps:
      - name: Cache Node Modules üíæ
        uses: actions/cache@v2
        with:
          path: ./.yarnrc
          key: cms-hitech-apd-yarn-{{ checksum "web/yarn.lock" }}-{{ checksum "api/yarn.lock" }}
          restore-keys: cms-hitech-apd-yarn-{{ checksum "web/yarn.lock" }}-{{ checksum "api/yarn.lock" }}

      - name: Checkout Repo üõéÔ∏è
        uses: actions/checkout@v2

      - name: Install Web Dependencies üï∏Ô∏è
        working-directory: ./web
        run: |
          yarn install --frozen-lockfile
      - name: Tar and Zip Frontend Node Modules
        working-directory: ./web
        run: |
          tar -cvzf frontend-modules.tar.gz ./node_modules
          ls -la
          pwd
      - name: Upload Frontend Node Modules üï∏Ô∏è
        uses: actions/upload-artifact@v2
        with:
          name: frontend-modules
          path: web/frontend-modules.tar.gz

      - name: Install API Dependencies ‚ú®
        working-directory: ./api
        run: |
          yarn install --frozen-lockfile
      - name: Tar and Zip Backend Node Modules
        working-directory: ./api
        run: |
          tar -cvzf backend-modules.tar.gz ./node_modules
          ls -la
          pwd
      - name: Upload Frontend Node Modules üï∏Ô∏è
        uses: actions/upload-artifact@v2
        with:
          name: frontend-modules
          path: api/backend-modules.tar.gz
      - name: Upload Backend Node Modules ‚ú®
        uses: actions/upload-artifact@v2
        with:
          name: backend-modules
          path: api/backend-modules.tar.gz

  dependency-vulnerability-scan:
    environment: Preview
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16']
    steps:
      - name: Cache Node Modules üíæ
        uses: actions/cache@v2
        with:
          path: ./.yarnrc
          key: cms-hitech-apd-yarn-{{ checksum "web/yarn.lock" }}-{{ checksum "api/yarn.lock" }}
          restore-keys: cms-hitech-apd-yarn-{{ checksum "web/yarn.lock" }}-{{ checksum "api/yarn.lock" }}

      - name: Checkout Repo üõéÔ∏è
        uses: actions/checkout@v2

      - name: Install Web Dependencies üï∏Ô∏è
        working-directory: ./web
        run: |
          yarn install --frozen-lockfile
      - name: Tar and Zip Frontend Node Modules
        working-directory: ./web
        run: |
          tar -cvzf frontend-modules.tar.gz ./node_modules
          ls -la
          pwd
      - name: Upload Frontend Node Modules üï∏Ô∏è
        uses: actions/upload-artifact@v2
        with:
          name: frontend-modules
          path: web/frontend-modules.tar.gz

      - name: Retrieve Cached Frontend Modules
        uses: actions/download-artifact@v2
        with:
          name: frontend-modules
          path: web/
      - name: Unarchieve and zip Frontend Node Modules
        working-directory: ./web/
        run: |
          ls -la
          pwd
          tar xzvf frontend-modules.tar.gz
      - name: Frontend Vulnerability Scan üï∏Ô∏è
        working-directory: ./web
        run: |
          ls -la
          pwd
          yarn run audit

      - name: Install API Dependencies ‚ú®
        working-directory: ./api
        run: |
          yarn install --frozen-lockfile
      - name: Tar and Zip Backend Node Modules
        working-directory: ./api
        run: |
          tar -cvzf backend-modules.tar.gz ./node_modules
          ls -la
          pwd

      - name: Retrieve Cached Backend Modules
        uses: actions/download-artifact@v2
        with:
          name: backend-modules
          path: api/
      - name: Unarchieve and zip Backend Node Modules
        working-directory: ./api/
        run: |
          ls -la
          pwd
          tar xzvf backend-modules.tar.gz
      - name: Backend Vulnerability Scan ‚ú®
        working-directory: ./api
        run: |
          ls -la
          pwd
          yarn run audit
    needs: install-dependencies
